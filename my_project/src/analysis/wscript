#! python


def build(ctx):

    # def out_analysis(*args):
    #     "Just a simple wrapper for quick access"
    #     return ctx.path_to(ctx, 'OUT_ANALYSIS', *args)

    # Illustrate use of run_m_script with automatic model specification.
    for model in 'baseline', 'endogenous_job_finding_duration':
        source = 'welfare_analysis'
        ctx(
            features='run_m_script',
            source= '{}.m'.format(source),
            target=[
                ctx.path_to(ctx, 'OUT_ANALYSIS', '{}_{}_1.mat'.format(model,source)),
                ctx.path_to(ctx, 'OUT_ANALYSIS', '{}_{}_2.mat'.format(model,source)),
                ctx.path_to(ctx, 'OUT_ANALYSIS', '{}_{}_3.mat'.format(model,source)),
                ctx.path_to(ctx, 'OUT_ANALYSIS', '{}_{}_4.mat'.format(model,source)),
                ctx.path_to(ctx, 'OUT_ANALYSIS', '{}_{}_5.mat'.format(model,source)),
                ctx.path_to(ctx, 'OUT_ANALYSIS', '{}_{}_6.mat'.format(model,source)),
                ctx.path_to(ctx, 'OUT_ANALYSIS', '{}_{}_7.mat'.format(model,source)),
                ctx.path_to(ctx, 'OUT_ANALYSIS', '{}_{}_8.mat'.format(model,source)),
                ctx.path_to(ctx, 'OUT_ANALYSIS', '{}_{}_9.mat'.format(model,source)),
                ctx.path_to(ctx, 'OUT_ANALYSIS', '{}_{}_10.mat'.format(model,source)),
                ctx.path_to(ctx, 'OUT_ANALYSIS', '{}_{}_11.mat'.format(model,source)),
                ctx.path_to(ctx, 'OUT_ANALYSIS', '{}_{}_12.mat'.format(model,source)),
                ctx.path_to(ctx, 'OUT_ANALYSIS', '{}_{}_13.mat'.format(model,source)),
                ctx.path_to(ctx, 'OUT_ANALYSIS', '{}_{}_14.mat'.format(model,source)),
                ctx.path_to(ctx, 'OUT_ANALYSIS', '{}_{}_15.mat'.format(model,source)),
                ctx.path_to(ctx, 'OUT_ANALYSIS', '{}_{}_16.mat'.format(model,source)),
                ctx.path_to(ctx, 'OUT_ANALYSIS', '{}_{}_17.mat'.format(model,source)),
                ctx.path_to(ctx, 'OUT_ANALYSIS', '{}_{}_18.mat'.format(model,source)),
                ctx.path_to(ctx, 'OUT_ANALYSIS', '{}_{}_19.mat'.format(model,source)),
                ctx.path_to(ctx, 'OUT_ANALYSIS', '{}_{}_20.mat'.format(model,source)),
                # ctx.path_to(ctx, 'OUT_ANALYSIS', 'solutions.mat'),
            ],
              deps=[
                 ctx.path_to(ctx, 'IN_MODEL_SPECS', '{}.json'.format(model)),
                 # ctx.path_to(ctx, 'OUT_DATA', 'simulation.mat'),
                 ctx.path_to(ctx, 'IN_MODEL_CODE', 'setup.m'),
                 ctx.path_to(ctx, 'IN_MODEL_CODE', 'aiyagari_solver.m'),
                 ctx.path_to(ctx, 'IN_MODEL_CODE', 'cash_equivalent.m'),
                 ctx.path_to(ctx, 'IN_MODEL_CODE', 'consumption_equivalent.m'),
             ],
            append="('{}')".format(model),
            name='{}_{}'.format(source, model)
            )
